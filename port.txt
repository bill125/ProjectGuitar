entity ImpulseGen is
	 generic 
	 ( 
	 pausePeriod: integer := 10
	 );
	port (
		hclk : in std_logic;
		clk : out std_logic
	);
end entity ImpulseGen;

UART_OUT:
	in: isOn, note, vel, prog, clk
	out: o_TX_SERIAL
	
entity NoteGen is
	port (
	pressedString : in integer range from 0 to 5;
	strings : in GuitarStatus;
	impulse, hclk : in std_logic;
	note : out integer range from 0 to 88;
	clk_out : out std_logic
	);
End entity NoteGen;
音源(Programme):
	in: keyboard_in : 2 * 
	out: prog : integer

entity Velocity is
	port (
	clk_in : std_logic;
	seg0, seg1 : in std_logic_vector(6 downto 0);
	vel : array (0 to 5) of integer
	);
End entity Velocity;

Keyboard:
	in:  clk, fclk, ...
	out: 2 * 16进制,
		 pressedString : integer range from 0 to 5
	
UART_IN:
	in: i_RX_SERIAL
	out: strings : GuitarStatus
	
	
